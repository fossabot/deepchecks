"use strict";(self.webpackChunkdeepchecks_docs=self.webpackChunkdeepchecks_docs||[]).push([[693],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(n),k=r,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||c;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var i=2;i<c;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5569:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),c=(n(7294),n(3905)),o=["components"],l={},s="deepchecks.checks.overview package",i={unversionedId:"api-reference/deepchecks.checks.overview",id:"api-reference/deepchecks.checks.overview",isDocsHomePage:!1,title:"deepchecks.checks.overview package",description:"Submodules",source:"@site/docs/api-reference/deepchecks.checks.overview.md",sourceDirName:"api-reference",slug:"/api-reference/deepchecks.checks.overview",permalink:"/docs/api-reference/deepchecks.checks.overview",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"deepchecks.checks.methodology package",permalink:"/docs/api-reference/deepchecks.checks.methodology"},next:{title:"deepchecks.checks.performance package",permalink:"/docs/api-reference/deepchecks.checks.performance"}},p=[{value:"Submodules",id:"submodules",children:[],level:2},{value:"deepchecks.checks.overview.columns_info module",id:"deepcheckschecksoverviewcolumns_info-module",children:[{value:"class ColumnsInfo()",id:"class-columnsinfo",children:[{value:"__init__(n_top_columns: int = 10)",id:"__init__n_top_columns-int--10",children:[],level:4},{value:"run(dataset: deepchecks.base.dataset.Dataset, model=None)",id:"rundataset-deepchecksbasedatasetdataset-modelnone",children:[],level:4}],level:3}],level:2},{value:"deepchecks.checks.overview.dataset_info module",id:"deepcheckschecksoverviewdataset_info-module",children:[{value:"class DatasetInfo()",id:"class-datasetinfo",children:[{value:"run(dataset: deepchecks.base.dataset.Dataset, model=None)",id:"rundataset-deepchecksbasedatasetdataset-modelnone-1",children:[],level:4}],level:3}],level:2},{value:"deepchecks.checks.overview.model_info module",id:"deepcheckschecksoverviewmodel_info-module",children:[{value:"class ModelInfo()",id:"class-modelinfo",children:[{value:"run(model: sklearn.base.BaseEstimator)",id:"runmodel-sklearnbasebaseestimator",children:[],level:4}],level:3}],level:2},{value:"Module contents",id:"module-contents",children:[],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,c.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"deepcheckschecksoverview-package"},"deepchecks.checks.overview package"),(0,c.kt)("h2",{id:"submodules"},"Submodules"),(0,c.kt)("h2",{id:"deepcheckschecksoverviewcolumns_info-module"},"deepchecks.checks.overview.columns_info module"),(0,c.kt)("p",null,"Module contains columns_info check."),(0,c.kt)("h3",{id:"class-columnsinfo"},"class ColumnsInfo()"),(0,c.kt)("p",null,"Bases: ",(0,c.kt)("inlineCode",{parentName:"p"},"deepchecks.base.check.SingleDatasetBaseCheck")),(0,c.kt)("p",null,"Return the role and logical type of each column."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Parameters")),(0,c.kt)("p",{parentName:"li"},"  ",(0,c.kt)("strong",{parentName:"p"},"n_top_columns")," (",(0,c.kt)("em",{parentName:"p"},"int"),") \u2013 (optinal - used only if model was specified)\namount of columns to show ordered by feature importance (date, index, label are first)"))),(0,c.kt)("h4",{id:"__init__n_top_columns-int--10"},"_","_init__(n_top_columns: int = 10)"),(0,c.kt)("h4",{id:"rundataset-deepchecksbasedatasetdataset-modelnone"},"run(dataset: deepchecks.base.dataset.Dataset, model=None)"),(0,c.kt)("p",null,"Run check."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Parameters")),(0,c.kt)("p",{parentName:"li"},"  ",(0,c.kt)("strong",{parentName:"p"},"dataset")," (",(0,c.kt)("em",{parentName:"p"},"Dataset"),") \u2013 any dataset.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Returns")),(0,c.kt)("p",{parentName:"li"},"  value is dictionary of a column and its role and logical type.\ndisplay a table of the dictionary.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Return type")),(0,c.kt)("p",{parentName:"li"},"  CheckResult"))),(0,c.kt)("h2",{id:"deepcheckschecksoverviewdataset_info-module"},"deepchecks.checks.overview.dataset_info module"),(0,c.kt)("p",null,"The dataset_info check module."),(0,c.kt)("h3",{id:"class-datasetinfo"},"class DatasetInfo()"),(0,c.kt)("p",null,"Bases: ",(0,c.kt)("inlineCode",{parentName:"p"},"deepchecks.base.check.SingleDatasetBaseCheck")),(0,c.kt)("p",null,"Summarize given dataset information based on pandas_profiling package."),(0,c.kt)("h4",{id:"rundataset-deepchecksbasedatasetdataset-modelnone-1"},"run(dataset: deepchecks.base.dataset.Dataset, model=None)"),(0,c.kt)("p",null,"Run check."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Parameters")),(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"dataset")," \u2013 Dataset - The dataset object")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"model")," \u2013 any = None - not used in the check")))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Returns")),(0,c.kt)("p",{parentName:"li"},"  the output of the dataset_info check"))),(0,c.kt)("h2",{id:"deepcheckschecksoverviewmodel_info-module"},"deepchecks.checks.overview.model_info module"),(0,c.kt)("p",null,"Module contains model_info check."),(0,c.kt)("h3",{id:"class-modelinfo"},"class ModelInfo()"),(0,c.kt)("p",null,"Bases: ",(0,c.kt)("inlineCode",{parentName:"p"},"deepchecks.base.check.ModelOnlyBaseCheck")),(0,c.kt)("p",null,"Summarize given model parameters."),(0,c.kt)("h4",{id:"runmodel-sklearnbasebaseestimator"},"run(model: sklearn.base.BaseEstimator)"),(0,c.kt)("p",null,"Run check."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Parameters")),(0,c.kt)("p",{parentName:"li"},"  ",(0,c.kt)("strong",{parentName:"p"},"model")," (",(0,c.kt)("em",{parentName:"p"},"BaseEstimator"),") \u2013 A scikit-learn-compatible fitted estimator instance")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Returns")),(0,c.kt)("p",{parentName:"li"},"  value is dictionary in format {type: <model_type>, params: <model_params_dict>}")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},(0,c.kt)("strong",{parentName:"p"},"Return type")),(0,c.kt)("p",{parentName:"li"},"  CheckResult"))),(0,c.kt)("h2",{id:"module-contents"},"Module contents"),(0,c.kt)("p",null,"Module contains check of overall overview of datasets and model."))}u.isMDXComponent=!0}}]);